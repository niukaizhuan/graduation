<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="state_date" property="stateDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password, phone, email
  </sql>
  <select id="selectUserId" resultType="java.lang.Integer"  parameterType="java.lang.String">
  	 SELECT
			id
		FROM
			`user`
		WHERE
			state = 'A'
		AND user_name = #{userName,jdbcType=VARCHAR};
  </select>
  
  <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
			<include refid="Base_Column_List" />
		FROM
			`user`
		WHERE
			state = 'A'
		AND user_name = #{userName,jdbcType=VARCHAR};
	</select>
	
	<select id="selectByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
			<include refid="Base_Column_List" />
		FROM
			`user`
		WHERE
			state = 'A'
		AND phone = #{phone,jdbcType=VARCHAR};
	</select>
  
  <select id="selectByEmail" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
			<include refid="Base_Column_List" />
		FROM
			`user`
		WHERE
			state = 'A'
		AND email = #{email,jdbcType=VARCHAR};
	</select>
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		SELECT
			<include refid = "Base_Column_List" />
		FROM
			`user`
		WHERE
			id = #{id,jdbcType=INTEGER}
  </select>
  
  <update id="deleteById" parameterType="java.lang.Integer">
	  	UPDATE `user`
		SET state = 'X'
		WHERE
			id = #{id,jdbcType = INTEGER}
  </update>
  
  <delete id="deleteComplete" parameterType="java.lang.Integer" >
	    DELETE
		FROM
			`user`
		WHERE
			id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.example.demo.entity.User" >
    INSERT INTO `user`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateById" parameterType="com.example.demo.entity.User" >
    UPDATE `user`
    <set>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectUserNameList" resultMap="BaseResultMap">
   SELECT id,
   user_name
   FROM user
   WHERE
   state='A'
  </select>
</mapper>